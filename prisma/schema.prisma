generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URL_NON_POOLING")
}

model User {
  id        String    @id @default(cuid())
  email     String    @unique
  name      String?
  password  String?
  image     String?
  role      Role      @default(USER)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  addresses Address[]
  orders    Order[]
}

model Product {
  id             String           @id @default(cuid())
  name           String
  description    String
  price          Float
  compareAtPrice Float?
  images         String[]
  categoryId     String
  inventory      Int              @default(0)
  isActive       Boolean          @default(true)
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  orderItems     OrderItem[]
  category       Category         @relation(fields: [categoryId], references: [id])
  variants       ProductVariant[]
}

model ProductVariant {
  id        String  @id @default(cuid())
  productId String
  name      String
  value     String
  price     Float?
  inventory Int     @default(0)
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)
}

model Category {
  id          String    @id @default(cuid())
  name        String
  description String?
  image       String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  products    Product[]
}

model Order {
  id              String      @id @default(cuid())
  userId          String
  status          OrderStatus @default(PENDING)
  total           Float
  shippingAddress String?
  billingAddress  String?
  paymentIntent   String?
  paymentStatus   String?
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt
  user            User        @relation(fields: [userId], references: [id])
  items           OrderItem[]
}

model OrderItem {
  id          String  @id @default(cuid())
  orderId     String
  productId   String
  quantity    Int
  price       Float
  variantInfo String?
  order       Order   @relation(fields: [orderId], references: [id], onDelete: Cascade)
  product     Product @relation(fields: [productId], references: [id])
}

model Address {
  id         String  @id @default(cuid())
  userId     String
  name       String
  line1      String
  line2      String?
  city       String
  state      String
  postalCode String
  country    String
  isDefault  Boolean @default(false)
  user       User    @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Content {
  id            String   @id @default(cuid())
  title         String
  slug          String   @unique
  content       String
  excerpt       String?
  featuredImage String?
  published     Boolean  @default(false)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

enum Role {
  USER
  ADMIN
}

enum OrderStatus {
  PENDING
  PROCESSING
  SHIPPED
  DELIVERED
  CANCELLED
}
